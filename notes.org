* Notes
** Managing versions (an ideal method; may not be implemented exactly like this)
New branch (named <MAJOR>.x.x) --> increment major version
New somata config (named <MAJOR>.<MINOR>.x) --> increment minor version
Meaningful updates that share a somata config (named <MAJOR>.<MINOR>.<PATCH>) --> increment patch version

** Things to update when making a new major version (i.e., a new branch) of the experiment
- ~package.json~ version (major version only)
- ~package-lock.json~ version (major version only)
- ~App.svelte~ experiment_id prop for each route
  - which takes care of experiment_id for sending messages to somata in ~ExperimentController.svelte~
- also make sure a somata config exists for this version
** Install from ~package-lock.json~ via ~npm ci~
Not ~npm install~, which updates all packages and may break reproducibility.
** Use ~npm run <script_name>~ to do stuff
The different scripts are defined in ~package.json~.
